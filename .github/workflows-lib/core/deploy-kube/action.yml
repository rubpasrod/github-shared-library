name: "Deploy in Kubernetes"

inputs:
  config:
    type: string
  docker_username:
    type: string

runs:
  using: "composite"
  steps:
    - name: Replace placeholders in service.yml
      shell: bash
      run: |
            IMAGE="${{ inputs.docker_username }}/$(jq -r '.docker.IMAGE_NAME' <<< '${{ inputs.config }}'):$(jq -r '.docker.TAG' <<< '${{ inputs.config }}')"

            DEPLOY_TMP=$(mktemp)
            SERVICE_TMP=$(mktemp)

                        
            sed "s|__SERVICE_NAME__|${{ fromJson(inputs.config).deploy.SERVICE_NAME }}|g;
                s|__APP_LABEL__|${{ fromJson(inputs.config).deploy.APP_LABEL }}|g;
                s|__IMAGE__|$IMAGE|g;
                s|__SERVICE_PORT__|${{ fromJson(inputs.config).deploy.SERVICE_PORT }}|g" \
                github-shared-library/manifests/deployment.yml > "$DEPLOY_TMP"

            sed "s|__SERVICE_NAME__|${{ fromJson(inputs.config).deploy.SERVICE_NAME }}|g;
                s|__APP_LABEL__|${{ fromJson(inputs.config).deploy.APP_LABEL }}|g;
                s|__SERVICE_PORT__|${{ fromJson(inputs.config).deploy.SERVICE_PORT }}|g;
                s|__TARGET_PORT__|${{ fromJson(inputs.config).deploy.TARGET_PORT }}|g;
                s|__NODE_PORT__|${{ fromJson(inputs.config).deploy.NODE_PORT }}|g" \
                github-shared-library/manifests/service.yml > "$SERVICE_TMP"

            kubectl apply -f "$DEPLOY_TMP"
            kubectl apply -f "$SERVICE_TMP"
    
    - name: "Start Minikube"
      shell: bash
      run: |
        if ! minikube status | grep -q 'host: Running'; then
            minikube start --driver=docker
        else
          echo "Minikube is already running."
        fi

    - name: Deploy application
      shell: bash
      run: |
        eval $(minikube docker-env)
        kubectl apply -f github-shared-library/manifests/

    - name: "Check Deployment Status"
      shell: bash
      run: |
        sleep 10
        kubectl get pods

